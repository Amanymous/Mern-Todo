{"ast":null,"code":"var _jsxFileName = \"/home/aman/Desktop/work/frontend-todos/src/pages/MyNotes/MyNotes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Accordion, Badge, Button, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\nimport MainPage from '../../components/MainPage/MainPage';\nimport axios from 'axios'; // import notes from './notes'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyNotes = () => {\n  _s();\n\n  const [state, setState] = useState(ini);\n\n  const deleteHandler = id => {\n    if (window.confirm(\"Are you sure\")) {}\n  };\n\n  const fetchNotes = async () => {\n    const data = await axios.get('/api/notes');\n    console.log(data);\n  };\n\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MainPage, {\n    title: `Welcome Back `,\n    children: [/*#__PURE__*/_jsxDEV(Link //   to=\"/createnote\"\n    , {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginLeft: 10,\n          marginBottom: 6\n        },\n        size: \"lg\",\n        children: \"Create new Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), notes.map(note => /*#__PURE__*/_jsxDEV(Accordion, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          margin: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          style: {\n            display: \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            // onClick={() => ModelShow(note)}\n            style: {\n              color: \"black\",\n              textDecoration: \"none\",\n              flex: 1,\n              cursor: \"pointer\",\n              alignSelf: \"center\",\n              fontSize: 18\n            },\n            children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n              as: Card.Text,\n              variant: \"link\",\n              eventKey: \"0\",\n              children: note.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              href: `/note/${note._id}`,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              className: \"mx-2\",\n              onClick: () => deleteHandler(note._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n          eventKey: \"0\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: /*#__PURE__*/_jsxDEV(Badge, {\n                variant: \"success\",\n                children: [\"Category -\", note.category]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"blockquote\", {\n              className: \"blockquote mb-0\",\n              children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                children: note.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n                className: \"blockquote-footer\",\n                children: [\"Created on\", \" \", /*#__PURE__*/_jsxDEV(\"cite\", {\n                  title: \"Source Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, note._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyNotes, \"MbEBgewIWrX8XeGQhnOzdSnVHKo=\");\n\n_c = MyNotes;\nexport default MyNotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyNotes\");","map":{"version":3,"sources":["/home/aman/Desktop/work/frontend-todos/src/pages/MyNotes/MyNotes.js"],"names":["React","useEffect","useState","Accordion","Badge","Button","Card","Link","ReactMarkdown","MainPage","axios","MyNotes","state","setState","ini","deleteHandler","id","window","confirm","fetchNotes","data","get","console","log","marginLeft","marginBottom","notes","map","note","margin","display","color","textDecoration","flex","cursor","alignSelf","fontSize","Text","title","_id","category","content"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Accordion, Badge, Button, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\nimport MainPage from '../../components/MainPage/MainPage'\nimport axios from 'axios'\n// import notes from './notes'\n\nconst MyNotes = () => {\n    const [state,setState] = useState(ini)\n    const deleteHandler = (id) =>{\n        if(window.confirm(\"Are you sure\")){\n\n        }\n    }\n    const fetchNotes = async() =>{\n        const data = await axios.get('/api/notes')\n        console.log(data)\n    }\n    useEffect(()=>{\n        fetchNotes()\n    },[])\n    return (\n        <MainPage title={`Welcome Back `}>\n     \n      <Link \n    //   to=\"/createnote\"\n      >\n        <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\n          Create new Note\n        </Button>\n      </Link>\n      {notes.map((note)=>(\n            <Accordion>\n              <Card style={{ margin: 10 }} \n              key={note._id}\n              >\n                <Card.Header style={{ display: \"flex\" }}>\n                  <span\n                    // onClick={() => ModelShow(note)}\n                    style={{\n                      color: \"black\",\n                      textDecoration: \"none\",\n                      flex: 1,\n                      cursor: \"pointer\",\n                      alignSelf: \"center\",\n                      fontSize: 18,\n                    }}\n                  >\n                    <Accordion.Toggle\n                      as={Card.Text}\n                      variant=\"link\"\n                      eventKey=\"0\"\n                    >\n                      {note.title}\n                    </Accordion.Toggle>\n                  </span>\n\n                  <div>\n                    <Button \n                    href={`/note/${note._id}`}\n                    >Edit</Button>\n                    <Button\n                      variant=\"danger\"\n                      className=\"mx-2\"\n                      onClick={() => deleteHandler(note._id)}\n                    >\n                      Delete\n                    </Button>\n                  </div>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                  <Card.Body>\n                    <h4>\n                      <Badge variant=\"success\">\n                        Category -\n                         {note.category}\n                      </Badge>\n                    </h4>\n                    <blockquote className=\"blockquote mb-0\">\n                      <ReactMarkdown>\n                          {note.content}\n                          </ReactMarkdown>\n                      <footer className=\"blockquote-footer\">\n                        Created on{\" \"}\n                        <cite title=\"Source Title\">\n                          {/* {note.createdAt.substring(0, 10)} */}\n                        </cite>\n                      </footer>\n                    </blockquote>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>))}\n    </MainPage>\n    );\n}\n\nexport default MyNotes;"]},"metadata":{},"sourceType":"module"}