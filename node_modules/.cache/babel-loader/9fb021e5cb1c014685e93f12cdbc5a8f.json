{"ast":null,"code":"import { USER_LOGIN_FAIL // USER_LOGIN_REQUEST,\n, USER_LOGIN_SUCCESS // USER_LOGOUT,\n// USER_REGISTER_FAIL,\n, USER_REGISTER_REQUEST // USER_REGISTER_SUCCESS,\n, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS } from \"../constants/userConstants\";\nimport axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/login\", {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password, pic) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users\", {\n      name,\n      pic,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/profile\", user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/aman/Desktop/work/frontend-todos/src/actions/userActions.js"],"names":["USER_LOGIN_FAIL","USER_LOGIN_SUCCESS","USER_REGISTER_REQUEST","USER_UPDATE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","axios","login","email","password","dispatch","type","USER_LOGIN_REQUEST","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","USER_LOGOUT","register","name","pic","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","updateProfile","user","getState","userLogin","userInfo","Authorization","token"],"mappings":"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","sourcesContent":["import {\n    USER_LOGIN_FAIL,\n    // USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    // USER_LOGOUT,\n    // USER_REGISTER_FAIL,\n    USER_REGISTER_REQUEST,\n    // USER_REGISTER_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n  } from \"../constants/userConstants\";\nimport axios from \"axios\";\n  \nexport const login = (email, password) => async (dispatch) => {\n    try {\n      dispatch({ type: USER_LOGIN_REQUEST });\n  \n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n  \n      const { data } = await axios.post(\n        \"/api/users/login\",\n        { email, password },\n        config\n      );\n  \n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n  \n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    } catch (error) {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n  \n  export const logout = () => async (dispatch) => {\n    localStorage.removeItem(\"userInfo\");\n    dispatch({ type: USER_LOGOUT });\n  };\n  \n  export const register = (name, email, password, pic) => async (dispatch) => {\n    try {\n      dispatch({ type: USER_REGISTER_REQUEST });\n  \n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n  \n      const { data } = await axios.post(\n        \"/api/users\",\n        { name, pic, email, password },\n        config\n      );\n  \n      dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n  \n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n  \n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    } catch (error) {\n      dispatch({\n        type: USER_REGISTER_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n  \n  export const updateProfile = (user) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: USER_UPDATE_REQUEST });\n  \n      const {\n        userLogin: { userInfo },\n      } = getState();\n  \n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n  \n      const { data } = await axios.post(\"/api/users/profile\", user, config);\n  \n      dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n  \n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n  \n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    } catch (error) {\n      dispatch({\n        type: USER_UPDATE_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n};"]},"metadata":{},"sourceType":"module"}