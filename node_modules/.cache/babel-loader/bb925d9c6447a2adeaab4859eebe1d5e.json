{"ast":null,"code":"import { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS // USER_LOGOUT,\n// USER_REGISTER_FAIL,\n// USER_REGISTER_REQUEST,\n// USER_REGISTER_SUCCESS,\n// USER_UPDATE_FAIL,\n// USER_UPDATE_REQUEST,\n// USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\nimport axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/login\", {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; //   export const logout = () => async (dispatch) => {\n//     localStorage.removeItem(\"userInfo\");\n//     dispatch({ type: USER_LOGOUT });\n//   };\n//   export const register = (name, email, password, pic) => async (dispatch) => {\n//     try {\n//       dispatch({ type: USER_REGISTER_REQUEST });\n//       const config = {\n//         headers: {\n//           \"Content-type\": \"application/json\",\n//         },\n//       };\n//       const { data } = await axios.post(\n//         \"/api/users\",\n//         { name, pic, email, password },\n//         config\n//       );\n//       dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n//       dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n//       localStorage.setItem(\"userInfo\", JSON.stringify(data));\n//     } catch (error) {\n//       dispatch({\n//         type: USER_REGISTER_FAIL,\n//         payload:\n//           error.response && error.response.data.message\n//             ? error.response.data.message\n//             : error.message,\n//       });\n//     }\n//   };\n//   export const updateProfile = (user) => async (dispatch, getState) => {\n//     try {\n//       dispatch({ type: USER_UPDATE_REQUEST });\n//       const {\n//         userLogin: { userInfo },\n//       } = getState();\n//       const config = {\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${userInfo.token}`,\n//         },\n//       };\n//       const { data } = await axios.post(\"/api/users/profile\", user, config);\n//       dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n//       dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n//       localStorage.setItem(\"userInfo\", JSON.stringify(data));\n//     } catch (error) {\n//       dispatch({\n//         type: USER_UPDATE_FAIL,\n//         payload:\n//           error.response && error.response.data.message\n//             ? error.response.data.message\n//             : error.message,\n//       });\n//     }\n// };","map":{"version":3,"sources":["/home/aman/Desktop/work/frontend-todos/src/actions/userActions.js"],"names":["USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message"],"mappings":"AAAA,SACIA,eADJ,EAEIC,kBAFJ,EAGIC,kBAHJ,CAII;AACA;AACA;AACA;AACA;AACA;AACA;AAVJ,OAWS,4BAXT;AAYA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR;AAEA,UAAMQ,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,KAAK,CAACS,IAAN,CACrB,kBADqB,EAErB;AAAEP,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAFqB,EAGrBG,MAHqB,CAAvB;AAMAF,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,kBAAR;AAA4BW,MAAAA,OAAO,EAAEF;AAArC,KAAD,CAAR;AAEAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;AACD,GAlBD,CAkBE,OAAOO,KAAP,EAAc;AACdX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER,eADC;AAEPa,MAAAA,OAAO,EACLK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CA5BI,C,CA8BP;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {\n    USER_LOGIN_FAIL,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    // USER_LOGOUT,\n    // USER_REGISTER_FAIL,\n    // USER_REGISTER_REQUEST,\n    // USER_REGISTER_SUCCESS,\n    // USER_UPDATE_FAIL,\n    // USER_UPDATE_REQUEST,\n    // USER_UPDATE_SUCCESS,\n  } from \"../constants/userConstants\";\nimport axios from \"axios\";\n  \nexport const login = (email, password) => async (dispatch) => {\n    try {\n      dispatch({ type: USER_LOGIN_REQUEST });\n  \n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n  \n      const { data } = await axios.post(\n        \"/api/users/login\",\n        { email, password },\n        config\n      );\n  \n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n  \n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    } catch (error) {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n  \n//   export const logout = () => async (dispatch) => {\n//     localStorage.removeItem(\"userInfo\");\n//     dispatch({ type: USER_LOGOUT });\n//   };\n  \n//   export const register = (name, email, password, pic) => async (dispatch) => {\n//     try {\n//       dispatch({ type: USER_REGISTER_REQUEST });\n  \n//       const config = {\n//         headers: {\n//           \"Content-type\": \"application/json\",\n//         },\n//       };\n  \n//       const { data } = await axios.post(\n//         \"/api/users\",\n//         { name, pic, email, password },\n//         config\n//       );\n  \n//       dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n  \n//       dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n  \n//       localStorage.setItem(\"userInfo\", JSON.stringify(data));\n//     } catch (error) {\n//       dispatch({\n//         type: USER_REGISTER_FAIL,\n//         payload:\n//           error.response && error.response.data.message\n//             ? error.response.data.message\n//             : error.message,\n//       });\n//     }\n//   };\n  \n//   export const updateProfile = (user) => async (dispatch, getState) => {\n//     try {\n//       dispatch({ type: USER_UPDATE_REQUEST });\n  \n//       const {\n//         userLogin: { userInfo },\n//       } = getState();\n  \n//       const config = {\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${userInfo.token}`,\n//         },\n//       };\n  \n//       const { data } = await axios.post(\"/api/users/profile\", user, config);\n  \n//       dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n  \n//       dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n  \n//       localStorage.setItem(\"userInfo\", JSON.stringify(data));\n//     } catch (error) {\n//       dispatch({\n//         type: USER_UPDATE_FAIL,\n//         payload:\n//           error.response && error.response.data.message\n//             ? error.response.data.message\n//             : error.message,\n//       });\n//     }\n// };"]},"metadata":{},"sourceType":"module"}