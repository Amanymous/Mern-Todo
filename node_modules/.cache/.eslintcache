[{"/home/aman/Desktop/work/src/index.js":"1","/home/aman/Desktop/work/src/App.js":"2","/home/aman/Desktop/work/src/reportWebVitals.js":"3","/home/aman/Desktop/work/src/store.js":"4","/home/aman/Desktop/work/src/reducers/notesReducers.js":"5","/home/aman/Desktop/work/src/reducers/ userReducers.js":"6","/home/aman/Desktop/work/src/components/Footer/Footer.js":"7","/home/aman/Desktop/work/src/pages/Landing/Landing.js":"8","/home/aman/Desktop/work/src/components/Header/Header.js":"9","/home/aman/Desktop/work/src/pages/Login/Login.js":"10","/home/aman/Desktop/work/src/pages/Register/Register.js":"11","/home/aman/Desktop/work/src/pages/MyNotes/MyNotes.js":"12","/home/aman/Desktop/work/src/pages/Profile/Profile.js":"13","/home/aman/Desktop/work/src/pages/SingleNote/SingleNote.js":"14","/home/aman/Desktop/work/src/pages/SingleNote/CreateNote.js":"15","/home/aman/Desktop/work/src/constants/notesConstants.js":"16","/home/aman/Desktop/work/src/constants/userConstants.js":"17","/home/aman/Desktop/work/src/actions/userActions.js":"18","/home/aman/Desktop/work/src/actions/notesActions.js":"19","/home/aman/Desktop/work/src/components/ErrorMessage/ErrorMessage.js":"20","/home/aman/Desktop/work/src/components/Loading/Loading.js":"21","/home/aman/Desktop/work/src/components/MainPage/MainPage.js":"22"},{"size":592,"mtime":1624907461304,"results":"23","hashOfConfig":"24"},{"size":1262,"mtime":1624920576132,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1624820013786,"results":"26","hashOfConfig":"24"},{"size":1086,"mtime":1624920289881,"results":"27","hashOfConfig":"24"},{"size":1902,"mtime":1624920270268,"results":"28","hashOfConfig":"24"},{"size":1520,"mtime":1624920272068,"results":"29","hashOfConfig":"24"},{"size":479,"mtime":1624920218048,"results":"30","hashOfConfig":"24"},{"size":1163,"mtime":1624920243038,"results":"31","hashOfConfig":"24"},{"size":2235,"mtime":1624920220541,"results":"32","hashOfConfig":"24"},{"size":2118,"mtime":1624920248018,"results":"33","hashOfConfig":"24"},{"size":5560,"mtime":1624920260951,"results":"34","hashOfConfig":"24"},{"size":4718,"mtime":1624920879826,"results":"35","hashOfConfig":"24"},{"size":4943,"mtime":1624920892102,"results":"36","hashOfConfig":"24"},{"size":4048,"mtime":1624920830240,"results":"37","hashOfConfig":"24"},{"size":3179,"mtime":1624920853857,"results":"38","hashOfConfig":"24"},{"size":686,"mtime":1624920233497,"results":"39","hashOfConfig":"24"},{"size":553,"mtime":1624920235414,"results":"40","hashOfConfig":"24"},{"size":2865,"mtime":1624920206688,"results":"41","hashOfConfig":"24"},{"size":3694,"mtime":1624920172173,"results":"42","hashOfConfig":"24"},{"size":279,"mtime":1624920705398,"results":"43","hashOfConfig":"24"},{"size":461,"mtime":1624920226061,"results":"44","hashOfConfig":"24"},{"size":518,"mtime":1624920228681,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xw8zr4",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aman/Desktop/work/src/index.js",[],"/home/aman/Desktop/work/src/App.js",[],"/home/aman/Desktop/work/src/reportWebVitals.js",[],"/home/aman/Desktop/work/src/store.js",[],"/home/aman/Desktop/work/src/reducers/notesReducers.js",[],"/home/aman/Desktop/work/src/reducers/ userReducers.js",[],"/home/aman/Desktop/work/src/components/Footer/Footer.js",[],"/home/aman/Desktop/work/src/pages/Landing/Landing.js",[],"/home/aman/Desktop/work/src/components/Header/Header.js",[],"/home/aman/Desktop/work/src/pages/Login/Login.js",[],"/home/aman/Desktop/work/src/pages/Register/Register.js",["92"],"\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios'\n\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage'\nimport Loading from '../../components/Loading/Loading'\nimport MainPage from \"../../components/MainPage/MainPage\";\nimport './Register.css'\n\nfunction Register({ history }) {\n    const [email, setEmail] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [pic, setPic] = useState(\n      \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n    );\n    const [password, setPassword] = useState(\"\");\n    const [confirmpassword, setConfirmPassword] = useState(\"\");\n    const [message, setMessage] = useState(null);\n    const [picMessage, setPicMessage] = useState(null);\n    const [error, setError] = useState(false);\n    const [loading, setLoading] = useState(false);\n  \n    // const dispatch = useDispatch();\n  \n    // const userRegister = useSelector((state) => state.userRegister);\n    // const { loading, error, userInfo } = userRegister;\n  \n    const postDetails = (pics) => {\n      if (\n        pics ===\n        \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n      ) {\n        return setPicMessage(\"Please Select an Image\");\n      }\n      setPicMessage(null);\n      if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n        const data = new FormData();\n        data.append(\"file\", pics);\n        data.append(\"upload_preset\", \"TodoList\");\n        data.append(\"cloud_name\", \"stackcode\");\n        fetch(\"https://api.cloudinary.com/v1_1/stackcode/image/upload\", {\n          method: \"post\",\n          body: data,\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            setPic(data.url.toString());\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      } else {\n        return setPicMessage(\"Please Select an Image\");\n      }\n    };\n  \n    // useEffect(() => {\n    //   if (userInfo) {\n    //     history.push(\"/\");\n    //   }\n    // }, [history, userInfo]);\n  \n    const submitHandler = async (e) => {\n      e.preventDefault();\n      console.log(email)\n    \n      if (password !== confirmpassword) {\n        setMessage(\"Passwords do not match\");\n      } else {\n        setMessage(null)\n        try{\n            const config = {\n                headers:{\n                    \"Content-type\":\"application/json\"\n                },\n            };\n            //  setLoading(true)\n             setLoading(true)\n        const { data } = await axios.post(\n            \"/api/users\",\n            {\n                name,pic,email,password\n            },config\n        )\n        setLoading(false) \n        localStorage.setItem('userInfo',JSON.stringify(data))\n        \n        }catch(error){\n        setError(error.response.data.message)\n        // setLoading(false)\n        }\n      }\n    //   dispatch(register(name, email, password, pic));\n    };\n  \n    return (\n      <MainPage title=\"REGISTER\">\n        <div className=\"loginContainer\">\n          {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n          {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\n          {loading && <Loading />}\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                value={name}\n                placeholder=\"Enter name\"\n                onChange={(e) => setName(e.target.value)}\n              />\n            </Form.Group>\n  \n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                value={email}\n                placeholder=\"Enter email\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </Form.Group>\n  \n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                value={password}\n                placeholder=\"Password\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Form.Group>\n  \n            <Form.Group controlId=\"confirmPassword\">\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                value={confirmpassword}\n                placeholder=\"Confirm Password\"\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              />\n            </Form.Group>\n  \n            {picMessage && (\n              <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\n            )}\n            <Form.Group controlId=\"pic\">\n              <Form.Label>Profile Picture</Form.Label>\n              <Form.File\n                onChange={(e) => postDetails(e.target.files[0])}\n                id=\"custom-file\"\n                type=\"image/png\"\n                label=\"Upload Profile Picture\"\n                custom\n              />\n            </Form.Group>\n  \n            <Button variant=\"primary\" type=\"submit\">\n              Register\n            </Button>\n          </Form>\n          <Row className=\"py-3\">\n            <Col>\n              Have an Account ? <Link to=\"/login\">Login</Link>\n            </Col>\n          </Row>\n        </div>\n      </MainPage>\n    );\n}\nexport default Register;\n  ","/home/aman/Desktop/work/src/pages/MyNotes/MyNotes.js",["93"],"import React, { useEffect, useState } from \"react\";\nimport { Accordion, Badge, Button, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport MainPage from '../../components/MainPage/MainPage'\nimport { deleteNoteAction, listNotes } from \"../../actions/notesActions\"\nimport Loading from \"../../components/Loading/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\n// import notes from './notes'\n\nfunction MyNotes({ history, search }) {\n    const dispatch = useDispatch();\n  \n    const noteList = useSelector((state) => state.noteList);\n    const { loading, error, notes } = noteList;\n  \n    // const filteredNotes = notes.filter((note) =>\n    //   note.title.toLowerCase().includes(search.toLowerCase())\n    // );\n  \n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n  \n    const noteDelete = useSelector((state) => state.noteDelete);\n    const {\n      loading: loadingDelete,\n      error: errorDelete,\n      success: successDelete,\n    } = noteDelete;\n  \n    const noteCreate = useSelector((state) => state.noteCreate);\n    const { success: successCreate } = noteCreate;\n  \n    const noteUpdate = useSelector((state) => state.noteUpdate);\n    const { success: successUpdate } = noteUpdate;\n  \n    useEffect(() => {\n      dispatch(listNotes());\n      if (!userInfo) {\n        history.push(\"/\");\n      }\n    }, [\n      dispatch,\n      history,\n      userInfo,\n      successDelete,\n      successCreate,\n      successUpdate,\n    ]);\n  \n    const deleteHandler = (id) => {\n      if (window.confirm(\"Are you sure?\")) {\n        dispatch(deleteNoteAction(id));\n      }\n    };\n  \n    return (\n      <MainPage title={`Welcome Back ${userInfo && userInfo.name}..`}>\n        {console.log(notes)}\n        <Link to=\"/createnote\">\n          <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\n            Create new Note\n          </Button>\n        </Link>\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n        {errorDelete && (\n          <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n        )}\n        {loading && <Loading />}\n        {loadingDelete && <Loading />}\n        {notes &&\n          notes\n            .filter((filteredNote) =>\n              filteredNote.title.toLowerCase().includes(search.toLowerCase())\n            )\n            .reverse()\n            .map((note) => (\n              <Accordion>\n                <Card style={{ margin: 10 }} key={note._id}>\n                  <Card.Header style={{ display: \"flex\" }}>\n                    <span\n                      // onClick={() => ModelShow(note)}\n                      style={{\n                        color: \"black\",\n                        textDecoration: \"none\",\n                        flex: 1,\n                        cursor: \"pointer\",\n                        alignSelf: \"center\",\n                        fontSize: 18,\n                      }}\n                    >\n                      <Accordion.Toggle\n                        as={Card.Text}\n                        variant=\"link\"\n                        eventKey=\"0\"\n                      >\n                        {note.title}\n                      </Accordion.Toggle>\n                    </span>\n  \n                    <div>\n                      <Button href={`/note/${note._id}`}>Edit</Button>\n                      <Button\n                        variant=\"danger\"\n                        className=\"mx-2\"\n                        onClick={() => deleteHandler(note._id)}\n                      >\n                        Delete\n                      </Button>\n                    </div>\n                  </Card.Header>\n                  <Accordion.Collapse eventKey=\"0\">\n                    <Card.Body>\n                      <h4>\n                        <Badge variant=\"success\">\n                          Category - {note.category}\n                        </Badge>\n                      </h4>\n                      <blockquote className=\"blockquote mb-0\">\n                        <ReactMarkdown>{note.content}</ReactMarkdown>\n                        <footer className=\"blockquote-footer\">\n                          Created on{\" \"}\n                          <cite title=\"Source Title\">\n                            {note.createdAt.substring(0, 10)}\n                          </cite>\n                        </footer>\n                      </blockquote>\n                    </Card.Body>\n                  </Accordion.Collapse>\n                </Card>\n              </Accordion>\n            ))}\n      </MainPage>\n    );\n}\n  \nexport default MyNotes;\n  ","/home/aman/Desktop/work/src/pages/Profile/Profile.js",[],"/home/aman/Desktop/work/src/pages/SingleNote/SingleNote.js",[],"/home/aman/Desktop/work/src/pages/SingleNote/CreateNote.js",[],"/home/aman/Desktop/work/src/constants/notesConstants.js",[],"/home/aman/Desktop/work/src/constants/userConstants.js",[],"/home/aman/Desktop/work/src/actions/userActions.js",[],"/home/aman/Desktop/work/src/actions/notesActions.js",[],"/home/aman/Desktop/work/src/components/ErrorMessage/ErrorMessage.js",[],"/home/aman/Desktop/work/src/components/Loading/Loading.js",[],"/home/aman/Desktop/work/src/components/MainPage/MainPage.js",[],{"ruleId":"94","severity":1,"message":"95","line":2,"column":27,"nodeType":"96","messageId":"97","endLine":2,"endColumn":36},{"ruleId":"94","severity":1,"message":"98","line":1,"column":28,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used."]